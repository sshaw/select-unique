window.SelectUnique=function(t){var e={};function o(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,o),i.l=!0,i.exports}return o.m=t,o.c=e,o.d=function(t,e,n){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)o.d(n,i,function(e){return t[e]}.bind(null,i));return n},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=0)}([function(t,e,o){"use strict";o.r(e);const n="selectUniqueSelected";e.default=class{constructor(t,e){if(this.config=Object.assign({},e),this.optionPosition={},this.optionPool={},this.selectElements="string"==typeof t?document.querySelectorAll(t):t,this.selectChanged=this.selectChanged.bind(this),!this.selectElements.length)throw new Error("No HTMLSelectElements found");for(let t of this.selectElements)if(!(t instanceof HTMLSelectElement))throw new Error("Only HTMLSelectElement are accepted, found "+t);const o=Array.from(this.selectElements).flatMap(t=>Array.from(t.options));this.uniqueOptions(o).forEach((t,e)=>{const o=this.optionId(t);this.optionPool[o]=t,this.optionPosition[o]=e});for(let t of this.selectElements)t.addEventListener("change",this.selectChanged,!1),-1!==t.selectedIndex&&this.optionSelected(t)}ignoreOption(t){return""===t.value.trim()||"function"==typeof this.config.ignoreOption&&this.config.ignoreOption(t)}optionId(t){return`${t.value}-${t.text}`}sortOptions(t){const e=t.selectedOptions[0],o=Array.from(t.options).sort((t,e)=>this.optionPosition[this.optionId(t)]-this.optionPosition[this.optionId(e)]);t.length=0,o.forEach(o=>{o.value===e.value?o.selected=!0:o.selected=!1,t.add(o)})}uniqueOptions(t){const e=[],o=new Set;for(let n of t){const t=this.optionId(n);o.has(t)||this.ignoreOption(n)||(o.add(t),e.push(n))}return e}selectChanged(t){if(n in t.target.dataset){const e=this.optionPool[t.target.dataset[n]];if(!e)throw new Error("Cannot find previously selected option "+t.target.dataset[n]);for(let o of this.selectElements)o!==t.target&&(o.options[o.options.length]=e.cloneNode(!0),this.sortOptions(o))}this.optionSelected(t.target)}optionSelected(t){for(let e of t.options)if(e.selected){if(this.ignoreOption(e)){delete t.dataset[n];break}t.dataset[n]=this.optionId(e);for(let o of this.selectElements)if(o!==t)for(let t=0;t<o.options.length;t++)if(e.text===o.options[t].text){o.remove(t);break}}}selected(){const t=[];for(let e of this.selectElements)e.selectedOptions.length&&!this.ignoreOption(e.selectedOptions[0])&&t.push({text:e.selectedOptions[0].text,value:e.selectedOptions[0].value});return t}remaining(){const t=[];for(let e of this.selectElements[0])e.selected||this.ignoreOption(e)||t.push({text:e.text,value:e.value});return t}}}]).default;